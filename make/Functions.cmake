macro(eulerListSubdirectories result directory)
	file(GLOB children RELATIVE ${directory} ${directory}/*)
	set(subdirs "")
	foreach(child ${children})
		if(IS_DIRECTORY ${directory}/${child})
			list(APPEND subdirs ${child})
		endif()
	endforeach()
	set(${result} ${subdirs})
endmacro()

function(eulerAddSubdirectories)
	eulerListSubdirectories(PROBLEMS ${CMAKE_CURRENT_SOURCE_DIR})
	foreach(PROBLEM ${PROBLEMS})
		add_subdirectory(${PROBLEM})
	endforeach()
endfunction()

function(eulerAddProblem)
	set(problem_main "${CMAKE_CURRENT_SOURCE_DIR}/main.cpp")
	get_filename_component(problem_SOURCES ${problem_main} NAME)
	get_filename_component(problem ${problem_main} DIRECTORY)
	get_filename_component(problem ${problem} NAME)

	if(NOT EXISTS ${problem_main})
		message(STATUS "Problem doesn't exist: ${problem_main}")
	endif()
	add_executable(${PROBLEM} ${problem_SOURCES})
	target_link_libraries(${PROBLEM} ${euler_LIBRARIES} euler)
endfunction()
