function(eulerSetCompileFlags)
	if(CMAKE_CXX_COMPILER_ID MATCHES GNU)
		set(F_WARN "-pedantic -Wall -Wextra -Wcast-align -Wcast-qual")
		set(F_WARN "${F_WARN} -Wctor-dtor-privacy -Wlogical-op")
		set(F_WARN "${F_WARN} -Wformat=2 -Winit-self -Wlogical-op")
		set(F_WARN "${F_WARN} -Wmissing-include-dirs -Wnoexcept")
		set(F_WARN "${F_WARN} -Wold-style-cast -Wshadow")
		set(F_WARN "${F_WARN} -Woverloaded-virtual -Wredundant-decls")
		set(F_WARN "${F_WARN} -Wsign-conversion -Wsign-promo -Wundef")
		set(F_WARN "${F_WARN} -Wstrict-null-sentinel -Wswitch-default")
		set(F_WARN "${F_WARN} -Wdisabled-optimization")
		set(F_WARN "${F_WARN} -Wstrict-overflow=5 -Wswitch-default")

		set(F_SAN "-fstack-protctor-strong -fsanitize=address")
		set(F_SAN "${F_SAN} -fsanitize=undefined")

		set(F_DBG "${F_WARN} ${F_SAN} -std=c++11 -g -O0")

		set(F_REL "${F_WARN} ${F_SAN} -std=c++11 -O2")
		set(F_REL "${F_REL} -fomit-frame-pointer")
	elseif(CMAKE_CXX_COMPILER_ID MATCHES Clang)
		set(F_WARN "-pedantic -Wall -Wextra -Wcast-align -Wcast-qual")
		set(F_WARN "${F_WARN} -Wdisabled-optimization -Wformat=2")
		set(F_WARN "${F_WARN} -Winit-self -Wstrict-overflow=5")
		set(F_WARN "${F_WARN} -Wmissing-include-dirs -Wold-style-cast")
		set(F_WARN "${F_WARN} -Wshadow -Wswitch-default")
		set(F_WARN "${F_WARN} -Woverloaded-virtual -Wredundant-decls")
		set(F_WARN "${F_WARN} -Wsign-conversion -Wsign-promo -Wundef")
		set(F_WARN "${F_WARN} -Wint-to-void-pointer-cast")
		set(F_WARN "${F_WARN} -Wctor-dtor-privacy")

		set(F_SAN "-fstack-protector-strong -fsanitize=address")
		set(F_SAN "${F_SAN} -fsanitize=undefined")

		set(F_DBG "${F_WARN} ${F_SAN} -std=c++11 -g -O0")

		set(F_REL "${F_WARN} ${F_SAN} -std=c++11 -O2")
		set(F_REL "${F_REL} -fomit-frame-pointer")
	else()
		set(F_DBG "")
		set(F_REL "")
	endif()

	set(CMAKE_CXX_FLAGS_RELEASE "${F_REL}" PARENT_SCOPE)
	set(CMAKE_CXX_FLAGS_DEBUG "${F_DBG}" PARENT_SCOPE)
endfunction()
