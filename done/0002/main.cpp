/*
 * euler - A collection of ProjectEuler solutions, and supporting libraries and tools.
 * Copyright (C) 2013 Axel Rasmussen
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include <iostream>
#include <cassert>
#include <cstdint>

#include "libeuler/math/EMath.h"

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 *     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * Find the sum of all the even-valued terms in the sequence which do not exceed four million.
 */

int main(void)
{
	uint32_t total, fib, n;
	
	total = 0;
	n = 0;
	fib = EMath::getFibonacciNumberN_UI(n);
	while(fib <= 4000000)
	{
		if((fib % 2) == 0)
			total += fib;
		
		n++;
		fib = EMath::getFibonacciNumberN_UI(n);
	}
	
	std::cout << "The total of the even terms in the Fibonacci sequence starting " <<
		"with 1 and 2, not exceeding 4,000,000 is: " << total << "\n";
	
	assert(total == 4613732);
	return 0;
}
